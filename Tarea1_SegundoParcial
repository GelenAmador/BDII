/*
    TAREA #1 Segundo Parcial
    GELEN AMADOR 20191003672
*/

--Ejercicio #1

CREATE OR REPLACE TRIGGER notDeleteCLERK
    BEFORE DELETE ON EMPLOYEES
    FOR EACH ROW
BEGIN
    IF :OLD.JOB_ID LIKE ('%CLERK') THEN -- Si el valor previo a la eliminacion contiene CLERK
        RAISE_APPLICATION_ERROR(-20000,'Error al eliminar ya que contiene la subcadena CLERK');
    END IF;
END;

-- Ejercicio #2

CREATE OR REPLACE TRIGGER comprobationDepart
    BEFORE INSERT ON DEPARTMENTS
    FOR EACH ROW
BEGIN
    IF :NEW.LOCATION_ID IS NULL THEN -- COMPRUEBO EL ID DE LOCATION SI ESTA NULL
        :NEW.LOCATION_ID := 1700;
    END IF;
    IF  :NEW.MANAGER_ID IS NULL  THEN -- COMPRUEBO EL ID MANAGER SI ESTA NULL
        :NEW.MANAGER_ID := 200;
    END IF;
 RAISE_APPLICATION_ERROR(-20000,'CODIGO REPETIDO');
END;


--Ejercicio #3

-- Creando las tablas

CREATE TABLE EMPLEADOS
 (
 CODIGO INT NOT NULL PRIMARY KEY,
 NOMBRE VARCHAR2(20),
 SALARIO DECIMAL(10,2)
 );

CREATE TABLE LOG_SALARIO
 (
 codigo INT,
 salario_anterior DECIMAL(10,2),
 salario_actual DECIMAL(10,2),
 fecha DATE,
 usuario VARCHAR2(20),
 operacion varchar2(10)
 );

CREATE SEQUENCE ID_EMPLEADOS
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

CREATE SEQUENCE ID_LOG_SALARIO
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
    
----------------------------------------------

 CREATE OR REPLACE TRIGGER operations
     BEFORE INSERT OR UPDATE OR DELETE ON EMPLEADOS 
     FOR EACH ROW 
 BEGIN 
     IF INSERTING THEN 
         INSERT INTO LOG_SALARIO VALUES(ID_LOG_SALARIO.NEXTVAL,1,:NEW.SALARIO,SYSDATE,USER,'INSERTING'); 
     ELSIF UPDATING THEN 
         INSERT INTO LOG_SALARIO VALUES(ID_LOG_SALARIO.NEXTVAL,:OLD.SALARIO,:NEW.SALARIO,SYSDATE,USER,'UPDATING'); 
     ELSIF DELETING THEN 
         INSERT INTO LOG_SALARIO VALUES(ID_LOG_SALARIO.NEXTVAL,:OLD.SALARIO,1,SYSDATE,USER,'DELETING'); 
     END IF; 
 END; 
 
 

